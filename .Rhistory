plot(cars)
setwd("~/ProyectoSEE/Mini_Curso_Python_R_MYSQL")
library(readr)
View(clientes)
library(readr)
clientes <- read_csv("data/clientes.csv")
View(clientes)
library(readr)
clientes_r = read_csv("data/clientes.csv")
clientes_r
reticulate::repl_python()
```{python}
y
setwd("~/ProyectoSEE/Mini_Curso_Python_R_MYSQL")
library(readr)
library(readr)
clientes_r = read_csv("data/clientes.csv")
clientes_r
clientes_r
library(knitr)
library(readr)
library(knitr)
clientes_r = read_csv("data/clientes.csv")
kable(clientes_r)
kable(head(clientes_r))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
install.packages("RMySQL")
#install.packages("RMySQL")
library(RMySQL)
#install.packages("RMySQL")
library(RMySQL)
conn = dbConnect(MySQL(),
user='root',
password='pachacama',
dbname='demo_see',
host='localhost')
#install.packages("RMySQL")
library(RMySQL)
conn = dbConnect(MySQL(),
user='root',
password='pachacama',
dbname='demo_see',
host='localhost')
conn = dbConnect(MySQL(),
user='dmeo_user',
password='pachacama',
dbname='demo_see',
host='localhost')
conn = dbConnect(MySQL(),
user='root',
password='pachacama',
dbname='demo_see',
host='localhost')
install.packages("DBI")
install.packages("DBI")
install.packages("RMariaDB")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(DBI)
conn = dbConnect(RMariaDB::MariaDB(),
user='root',
password='pachacama',
db='demo_see',
host='localhost')
setwd("~/ProyectoSEE/Mini_Curso_Python_R_MYSQL")
install.packages("reticulate")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("env/bin/python")
library(reticulate)
use_python("env/bin/python")
reticulate::repl_python()
reticulate::repl_python()
# R
x = 22
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(reticulate)
use_python("env/bin/python")
reticulate::repl_python()
install.packages("DBI")
install.packages("RMariaDB")
library(DBI)
library(RMySQL)
#library(RMariaDB)
conn = dbConnect(MySQL(),  # MariaDB()
Driver="FreeTDS",
user='root',
password='DemoSEE123_',
dbname='demo_see',
host='localhost')
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("env/bin/python")
library(DBI)
library(RMySQL)
#library(RMariaDB)
conn = dbConnect(MySQL(),  # MariaDB()
Driver="FreeTDS",
user='root',
password='DemoSEE123_',
dbname='demo_see',
host='localhost')
library(dplyr)
df_client
str(df_cliente)
str(df_cliente)
summary(df_cliente)
View(df_client)
library(DBI)
library(RMySQL)
#library(RMariaDB)
conn = dbConnect(MySQL(),  # MariaDB()
Driver="FreeTDS",
user='root',
password='DemoSEE123_',
dbname='demo_see',
host='localhost')
library(reticulate)
use_python("env/bin/python")
library(DBI)
library(RMySQL)
#library(RMariaDB)
conn = dbConnect(MySQL(),  # MariaDB()
Driver="FreeTDS",
user='root',
password='DemoSEE123_',
dbname='demo_see',
host='localhost')
print(df_client)
str(df_client)
str(df_client)
df_client %>% fileter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = as.factor(y)) -> df_client
df_client %>% filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = as.factor(y)) -> df_client
str(df_client)
library(DBI)
library(RMySQL)
#library(RMariaDB)
conn = dbConnect(MySQL(),  # MariaDB()
Driver="FreeTDS",
user='root',
password='DemoSEE123_',
dbname='demo_see',
host='localhost')
library(dplyr)
str(df_client)
df_client %>% filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) -> df_client
str(df_client)
summary(df_client)
library(dplyr)
str(df_client)
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) -> df_client
str(df_client)
summary(df_client)
glm(formula = y~., data = df_client)
model = glm(formula = y~., data = df_client)
library(dplyr)
str(df_client)
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) %>%
filter(!is.na(y) | !is.nan(y) | !is.infinite(y))-> df_client
str(df_client)
model = glm(formula = y~., data = df_client)
library(dplyr)
str(df_client)
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) %>%
filter(!is.na(y) | !is.nan(y) | !is.infinite(y))-> df_client
str(df_client)
summary(df_client)
model = glm(formula = y~., data = df_client, family = "binomial")
summary(model)
df_new
etl = function(df_client){
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) %>%
filter(!is.na(y) | !is.nan(y) | !is.infinite(y))-> df_client
return(df_client)
}
library(dplyr)
str(df_client)
etl = function(df_client){
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) %>%
filter(!is.na(y) | !is.nan(y) | !is.infinite(y))-> df_client
return(df_client)
}
df_client = etl(df_client)
df_new = etl(df_new)
df_new
predict(modelo, df_new)
model = glm(formula = y~., data = df_client, family = "binomial")
summary(model)
predict(modelo, df_new)
predict(model, df_new)
View(df_new)
plot(model)
y_pred = predict(model, df_new)
# Regresoras
df = df_client
View(df)
# Regresoras
df = df_client %>% select(-y)
df_new = read.csv('data/nuevos_clientes.csv')
View(df_new)
df_new = read.csv('data/nuevos_clientes.csv')
df_new %>% select(-y)
df_client = read.csv("data/clientes.csv")
View(df_client)
View(df_new)
write.csv(df_new %>% select(-y,-X), file = "data/nuevos_clientes.csv")
df_new = read.csv('data/nuevos_clientes.csv')
View(df_new)
library(DBI)
library(RMySQL)
#library(RMariaDB)
conn = dbConnect(MySQL(),  # MariaDB()
Driver="FreeTDS",
user='root',
password='DemoSEE123_',
dbname='demo_see',
host='localhost')
dbListTables(conn)
library(reticulate)
use_python("env/bin/python")
library(DBI)
library(RMySQL)
#library(RMariaDB)
conn = dbConnect(MySQL(),  # MariaDB()
Driver="FreeTDS",
user='root',
password='DemoSEE123_',
dbname='demo_see',
host='localhost')
library(dplyr)
etl = function(df_client){
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) %>%
filter(!is.na(y) | !is.nan(y) | !is.infinite(y))-> df_client
return(df_client)
}
df_client = etl(df_client)
# Regresoras
df_x = df_client %>% select(-y)
summary(df_client)
reticulate::repl_python()
View(df_client)
# Data para modelo
df_glm = py$df_acp
library(reticulate)
use_python("env/bin/python")
library(DBI)
library(RMySQL)
#library(RMariaDB)
conn = dbConnect(MySQL(),  # MariaDB()
Driver="FreeTDS",
user='root',
password='DemoSEE123_',
dbname='demo_see',
host='localhost')
library(dplyr)
etl = function(df_client){
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) %>%
filter(!is.na(y) | !is.nan(y) | !is.infinite(y))-> df_client
return(df_client)
}
df_client = etl(df_client)
# Regresoras
df_x = df_client %>% select(-y)
summary(df_client)
reticulate::repl_python()
reticulate::repl_python()
# Data para modelo
df_glm = py$df_acp
df_glm$y = df_client$y
# Ajuste de Modelo
model = glm(formula = y~., data = df_client, family = "binomial")
summary(model)
plot(model)
df_glm
# Ajuste de Modelo
model = glm(formula = y~., data = df_glm, family = "binomial")
summary(model)
plot(model)
df_new = etl(df_new)
df_new = etl(df_new)
etl = function(df_client, train = TRUE){
if(train){
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario),
y = factor(y)) %>%
filter(!is.na(y) | !is.nan(y) | !is.infinite(y))-> df_client
}else{
df_client %>%
select(-code) %>%
filter(salario != "NA") %>%
mutate(salario = as.numeric(salario)) -> df_client
}
return(df_client)
}
df_new = etl(df_new,train = FALSE)
head(df_new)
reticulate::repl_python()
df_new = etl(df_new,train = FALSE)
df_new = etl(df_new,train = FALSE)
head(df_new)
df_x
reticulate::repl_python()
reticulate::repl_python()
df_new
df_new$y_pred = predict(model, py$df_acp_new)
py$df_acp_new
reticulate::repl_python()
reticulate::repl_python()
df_new$y_pred = predict(model, py$df_acp_new)
reticulate::repl_python()
df_new$y_pred = predict(model, py$df_acp_new)
reticulate::repl_python()
reticulate::repl_python()
